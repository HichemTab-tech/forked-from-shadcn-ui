{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "calendar",
  "type": "registry:ui",
  "author": "shadcn (https://ui.shadcn.com)",
  "dependencies": [
    "react-day-picker@^9.5.1"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "ui/calendar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeftIcon, ChevronRightIcon } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/registry/default/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col gap-2 relative\",\n        month: \"flex flex-col gap-4\",\n        month_caption: \"flex justify-center pt-1 relative items-center w-full\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"flex items-center gap-1 absolute h-7 w-full z-10\",\n        button_previous: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\",\n          \"absolute left-1\",\n        ),\n        button_next: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\",\n          \"absolute right-1\",\n        ),\n        month_grid: \"w-full border-collapse space-x-1\",\n        weekdays: \"flex\",\n        weekday: \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]\",\n        week: \"flex w-full mt-2\",\n        day: cn(\n          \"group relative size-8 p-0 text-center text-sm focus-within:relative focus-within:z-20\",\n        ),\n        day_button: cn(\n          \"size-8 p-0 font-normal aria-selected:opacity-100\",\n          props.mode === \"range\"\n            ? \"group-aria-selected:group-[.day-range-start]:bg-primary group-aria-selected:group-[.day-range-end]:bg-primary group-aria-selected:group-[.day-range-end]:rounded-md group-aria-selected:group-[.day-range-start]:rounded-md\"\n            : \"group-aria-selected:bg-primary group-aria-selected:rounded-md\",\n        ),\n        range_start: \"day-range-start rounded-l-md\",\n        range_end: \"day-range-end rounded-r-md\",\n        selected: \"bg-accent text-primary-foreground\",\n        today:\n          \"bg-accent text-accent-foreground hover:bg-primary hover:text-primary-foreground rounded-md\",\n        outside: \" text-muted-foreground aria-selected:text-muted-foreground\",\n        disabled: \"text-muted-foreground opacity-50\",\n        range_middle: \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        Chevron: (props) => {\n          if (props.orientation === \"left\") {\n            return <ChevronLeftIcon {...props} />;\n          }\n          return <ChevronRightIcon {...props} />;\n        },\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}